generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  coilId     String?
  coil       Coil?     @relation(fields: [coilId], references: [id])

  // INVITATION FLOW
  invitedById  String?
  invitedBy    User?         @relation("UserInviter", fields: [invitedById], references: [id])
  invitedUsers User[]        @relation("UserInviter")

  invitations  Invitation[]  @relation("UserInvitations")
  token        Token?        // âœ… relation inferred by Token.user
}

model Token {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @unique
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model Invitation {
  id           String   @id @default(uuid())
  token        String   @unique
  email        String
  name         String
  coilId     String
  coil       Coil     @relation(fields: [coilId], references: [id])

  invitedById  String
  invitedBy    User     @relation("UserInvitations", fields: [invitedById], references: [id])

  acceptedAt   DateTime?
  createdAt    DateTime @default(now())
}

model Coil {
  id          String        @id @default(uuid())
  slug        String        @unique
  name        String
  description String?
  inviteOnly  Boolean       @default(false)
  createdAt   DateTime      @default(now())

  users       User[]
  invitations Invitation[]
}